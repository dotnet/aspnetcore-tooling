<?xml version="1.0" encoding="utf-8"?>
<Project>
  <Import Project="Sdk.targets" Sdk="Microsoft.DotNet.Arcade.Sdk" />
  <Import Project="eng\MPack.targets" />

  <!-- Workaround https://github.com/dotnet/cli/issues/10528 -->
  <PropertyGroup>
    <BundledNETCorePlatformsPackageVersion>$(MicrosoftNETCorePlatformsPackageVersion)</BundledNETCorePlatformsPackageVersion>
  </PropertyGroup>

  <!-- Source Build still uses a 3.0 SDK, which we need to retarget to 5.0 until the first 5.0 SDK is publicly released -->
  <ItemGroup Condition="'$(DotNetBuildFromSource)' == 'true'">
    <KnownFrameworkReference
      Include="@(KnownFrameworkReference->WithMetadataValue('TargetFramework', 'netcoreapp3.0'))"
      TargetFramework="netcoreapp5.0"
      />
  </ItemGroup>

  <!-- Workaround while there is no publicly released 5.0 SDK available for source build, suppress unsupported version error -->
  <PropertyGroup Condition="'$(DotNetBuildFromSource)' == 'true'">
    <NETCoreAppMaximumVersion>5.0</NETCoreAppMaximumVersion>
  </PropertyGroup>

  <!-- Workaround while there is no publicly released 5.0 SDK available for source build -->
  <ItemGroup>
    <FrameworkReference 
      Update="Microsoft.NETCore.App"
      Condition="'$(TargetFramework)' == 'netcoreapp5.0' and '$(DotNetBuildFromSource)' == 'true'"
      RuntimeFrameworkVersion="$(MicrosoftNETCoreAppRuntimeVersion)"
      TargetingPackVersion="$(MicrosoftNETCoreAppRefPackageVersion)"
    />
  </ItemGroup>

  <ItemGroup>
    <!-- Track compiler separately from Arcade.-->
    <PackageReference Include="Microsoft.Net.Compilers.Toolset"
        Version="$(MicrosoftNetCompilersToolsetPackageVersion)"
        PrivateAssets="all"
        IsImplicitlyDefined="true" />
  </ItemGroup>
</Project>
